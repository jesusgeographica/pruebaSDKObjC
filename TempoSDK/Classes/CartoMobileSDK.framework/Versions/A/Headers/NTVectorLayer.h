/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTVectorDataSource.h"
#import "NTLayer.h"
#import "NTVectorElementEventListener.h"

/**
 * A vector layer that loads data using an envelope. Should be used together with corresponding data source.
 */
__attribute__ ((visibility("default"))) @interface NTVectorLayer : NTLayer
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTVectorLayer*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;

/**
 * Constructs a VectorLayer object from a data source.<br>
 * @param dataSource The data source from which this layer loads data.
 */
-(id)initWithDataSource: (NTVectorDataSource*)dataSource;
/**
 * Returns the vector data source of this vector layer.<br>
 * @return The vector data source that was bound to this vector layer on construction.
 */
-(NTVectorDataSource*)getDataSource;
/**
 * Returns the vector element event listener.<br>
 * @return The vector element event listener.
 */
-(NTVectorElementEventListener*)getVectorElementEventListener;
/**
 * Sets the vector element event listener.<br>
 * @param eventListener The vector element event listener.
 */
-(void)setVectorElementEventListener: (NTVectorElementEventListener*)eventListener;
-(BOOL)isUpdateInProgress;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.<br>
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

