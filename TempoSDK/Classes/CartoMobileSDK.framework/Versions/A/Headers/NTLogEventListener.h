/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif

/**
 * Listener for events logged by the SDK.
 */
__attribute__ ((visibility("default"))) @interface NTLogEventListener : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTLogEventListener*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;

/**
 * Listener method that gets called when SDK want to log a debug level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onDebugEvent: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log a debug level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onDebugEventSwigExplicitNTLogEventListener: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log an info level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onInfoEvent: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log an info level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onInfoEventSwigExplicitNTLogEventListener: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log a warning level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onWarnEvent: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log a warning level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onWarnEventSwigExplicitNTLogEventListener: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log an error level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onErrorEvent: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log an error level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onErrorEventSwigExplicitNTLogEventListener: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log a fatal level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onFatalEvent: (NSString*)message;
/**
 * Listener method that gets called when SDK want to log a fatal level event.<br>
 * This method can be called from any thread.<br>
 * @param message The message to log.<br>
 * @return True if the message should be shown by the SDK or false if it should be ignored.
 */
-(BOOL)onFatalEventSwigExplicitNTLogEventListener: (NSString*)message;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.<br>
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;
-(id)init;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

