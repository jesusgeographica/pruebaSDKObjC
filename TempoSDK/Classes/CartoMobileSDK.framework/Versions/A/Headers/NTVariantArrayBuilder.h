/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTVariant.h"

/**
 * A helper class for building variant arrays.
 */
__attribute__ ((visibility("default"))) @interface NTVariantArrayBuilder : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * A default constructor.
 */
-(id)init;
/**
 * Adds a new string to the array as the last element.<br>
 * @param str The string to add.
 */
-(void)addString: (NSString*)str;
/**
 * Adds a new boolean to the array as the last element.<br>
 * @param val The boolean to add.
 */
-(void)addBool: (BOOL)val;
/**
 * Adds a new long integer to the array as the last element.<br>
 * @param val The integer to add.
 */
-(void)addLong: (long long)val;
/**
 * Adds a new double floating point value to the array as the last element.<br>
 * @param val The floating point value to add.
 */
-(void)addDouble: (double)val;
/**
 * Adds a new variant to the array as the last element.<br>
 * @param var The variant to add.
 */
-(void)addVariant: (NTVariant*)var;
/**
 * Builds a new array variant from the added elements.<br>
 * @return The corresponding variant object.
 */
-(NTVariant*)buildVariant;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

