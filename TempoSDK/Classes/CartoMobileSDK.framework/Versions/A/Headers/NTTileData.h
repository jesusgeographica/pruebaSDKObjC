/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTBinaryData.h"

/**
 * A wrapper class for tile data.
 */
__attribute__ ((visibility("default"))) @interface NTTileData : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs a TileData object from a data blob.<br>
 * @param data The source tile data.
 */
-(id)initWithData: (NTBinaryData*)data;
/**
 * Returns the maximum age of the tile data, tile data will expire after that point.<br>
 * @return Tile data maximum age in milliseconds, or -1 if the data does not expire.
 */
-(long long)getMaxAge;
/**
 * Sets the maximum age of tile data, tile data will expire after that point.<br>
 * @param maxAge Tile data maximum age in milliseconds, or -1 if the data does not expire.
 */
-(void)setMaxAge: (long long)maxAge;
/**
 * Returns true if the tile should be replaced with parent tile.<br>
 * @return True if the tile should be replaced with parent. False otherwise.
 */
-(BOOL)isReplaceWithParent;
/**
 * Set the parent replacement flag.<br>
 * @param flag True when the tile should be replaced with the parent, false otherwise.
 */
-(void)setReplaceWithParent: (BOOL)flag;
/**
 * Returns tile data as binary data.<br>
 * @return Tile data as binary data.
 */
-(NTBinaryData*)getData;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

