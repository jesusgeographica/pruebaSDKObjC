/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTMapPos.h"
#import "NTMapTile.h"
#import "NTVectorTileFeature.h"
#import "NTLayer.h"
#import "NTClickType.h"

/**
 * A container class that provides information about a click performed on vector tile feature.
 */
__attribute__ ((visibility("default"))) @interface NTVectorTileClickInfo : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Returns the click type.<br>
 * @return The type of the click performed.
 */
-(enum NTClickType)getClickType;
/**
 * Returns the click position.<br>
 * @return The click position in the coordinate system of the base projection.
 */
-(NTMapPos*)getClickPos;
/**
 * Returns the position on the clicked feature, that is close to the click position.<br>
 * For points it will always be the center position, for lines it will be the closest point<br>
 * on the line, for billboards it will be the anchor point and for polygons it's equal to<br>
 * getClickPos().<br>
 * @return The feature click position in the coordinate system of the base projection.
 */
-(NTMapPos*)getFeatureClickPos;
/**
 * Returns the tile id of the clicked feature.<br>
 * @return The tile id of the clicked feature.
 */
-(NTMapTile*)getMapTile;
/**
 * Returns the id of the clicked feature.<br>
 * @return The id of the clicked feature.
 */
-(long long)getFeatureId;
/**
 * Returns the clicked feature.<br>
 * @return The feature on which the click was performed.
 */
-(NTVectorTileFeature*)getFeature;
/**
 * Returns the name of the layer of the clicked feature.<br>
 * Note that this is the layer name in the tile, not the name of style layer.<br>
 * @return The name of the layer of the clicked feature.
 */
-(NSString*)getFeatureLayerName;
/**
 * Returns the layer of the vector tile.<br>
 * @return The layer of the vector tile.
 */
-(NTLayer*)getLayer;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

