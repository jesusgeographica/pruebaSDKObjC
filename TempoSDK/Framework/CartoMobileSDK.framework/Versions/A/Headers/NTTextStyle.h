/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTColor.h"
#import "NTLabelStyle.h"

/**
 * Margins info for text.
 */
__attribute__ ((visibility("default"))) @interface NTTextMargins : NSObject
{
	/** @internal:nodoc: */
	void *swigCPtr;
	/** @internal:nodoc: */
	BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
-(id)initWithLeft: (int)left top: (int)top right: (int)right bottom: (int)bottom;
-(int)getLeft;
-(int)getTop;
-(int)getRight;
-(int)getBottom;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#import "NTColor.h"
#import "NTLabelStyle.h"

/**
 * A style for text labels. Contains attributes for configuring how the text label is drawn on the screen.
 */
__attribute__ ((visibility("default"))) @interface NTTextStyle : NTLabelStyle
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**
 * Creates a polymorphic instance of the given native object. This is used internally by the SDK.
 * @param cPtr The native pointer of the instance.
 * @param cMemoryOwn The ownership flag.
 * @return The new instance.
 */
/** @internal:nodoc: */
+(NTTextStyle*)swigCreatePolymorphicInstance:(void*)cPtr swigOwnCObject:(BOOL)cMemoryOwn;

/**
 * Returns the font's color.<br>
 * @return The color of the font.
 */
-(NTColor*)getFontColor;
/**
 * Returns the font's name.<br>
 * @return The platform dependent name of the font.
 */
-(NSString*)getFontName;
/**
 * Returns the text field variable to use.<br>
 * @return The text field variable.
 */
-(NSString*)getTextField;
/**
 * Returns the font's size.<br>
 * @return The size of the font in points.
 */
-(float)getFontSize;
/**
 * Returns the state of the 'break lines' flag.<br>
 * @return The state of the 'break lines' flag.
 */
-(BOOL)isBreakLines;
/**
 * Returns the margins for the text.<br>
 * @return The margins for the text.
 */
-(NTTextMargins*)getTextMargins;
/**
 * Returns the color of the stroke.<br>
 * @return The color of the stroke around the text.
 */
-(NTColor*)getStrokeColor;
/**
 * Returns the width of the stroke.<br>
 * @return The width of the stroke around the text.
 */
-(float)getStrokeWidth;
/**
 * Returns the color of the border.<br>
 * @return The color of the border around the text.
 */
-(NTColor*)getBorderColor;
/**
 * Returns the width of the border.<br>
 * @return The width of the border around the text.
 */
-(float)getBorderWidth;
/**
 * Returns the background color of the text.<br>
 * @return The background color of the text.
 */
-(NTColor*)getBackgroundColor;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;
/**
 * Returns the actual class name of this object. This is used internally by the SDK.<br>
 * @return The class name of this object.
 */
/** @internal:nodoc: */
-(NSString*)swigGetClassName;
/**
 * Returns the pointer to the connected director object. This is used internally by the SDK.<br>
 * @return The pointer to the connected director object or null if director is not connected.
 */
/** @internal:nodoc: */
-(void *)swigGetDirectorObject;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

