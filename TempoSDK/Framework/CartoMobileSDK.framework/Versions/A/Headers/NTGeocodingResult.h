/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTAddress.h"
#import "NTFeatureCollection.h"
#import "NTProjection.h"

/**
 * A geocoding result object describing address, features (geometry) and rank of the result.
 */
__attribute__ ((visibility("default"))) @interface NTGeocodingResult : NSObject
{
  /** @internal:nodoc: */
  void *swigCPtr;
  /** @internal:nodoc: */
  BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs a GeocodingResult from a projection, address, rank and feature collection.<br>
 * @param projection The projection used for the geometry of the result.<br>
 * @param address The address of the result.<br>
 * @param rank The relative ranking of the result (in range 0..1).<br>
 * @param featureCollection The geometry (features) associated with the result.
 */
-(id)initWithProjection: (NTProjection*)projection address: (NTAddress*)address rank: (float)rank featureCollection: (NTFeatureCollection*)featureCollection;
/**
 * Returns the address of the result.<br>
 * @return The address of the result.
 */
-(NTAddress*)getAddress;
/**
 * Returns the rank of the result.<br>
 * The rank is a normalized number between 0 and 1, 1 meaning a perfect match.<br>
 * @return The rank of the result.
 */
-(float)getRank;
/**
 * Returns the feature collection of the result.<br>
 * @return The feature collection of the result.
 */
-(NTFeatureCollection*)getFeatureCollection;
/**
 * Returns the projection of the geometry in the result.<br>
 * @return The projection of the geometry in the result.
 */
-(NTProjection*)getProjection;
/**
 * Creates a string representation of this result object, useful for logging.<br>
 * @return The string representation of this result object.
 */
-(NSString*)description;
/**
 * Returns the raw pointer to the object. This is used internally by the SDK.<br>
 * @return The internal pointer of the object.
 */
/** @internal:nodoc: */
-(long long)swigGetRawPtr;

-(void)dealloc;

@end


#import "NTAddress.h"
#import "NTFeatureCollection.h"
#import "NTProjection.h"

__attribute__ ((visibility("default"))) @interface NTGeocodingResultVector : NSObject
{
	/** @internal:nodoc: */
	void *swigCPtr;
	/** @internal:nodoc: */
	BOOL swigCMemOwn;
}
/** @internal:nodoc: */
-(void*)getCptr;
/** @internal:nodoc: */
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
-(id)init;
-(unsigned int)size;
-(unsigned int)capacity;
-(void)reserve: (unsigned int)n;
-(BOOL)isEmpty;
-(void)clear;
-(void)add: (NTGeocodingResult*)x;
-(NTGeocodingResult*)get: (int)i;
-(void)set: (int)i val: (NTGeocodingResult*)val;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

